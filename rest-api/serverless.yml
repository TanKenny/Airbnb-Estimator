service: AirbnbPriceEstimator # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
custom: # add these two lines
  secrets: ${file(secrets.json)} # reference the secrets.json file

provider:
  name: aws
  runtime: nodejs8.10
  memorySize: 128 # set the maximum memory of the Lambdas in Megabytes
  timeout: 10 # the timeout is 10 seconds (default is 6 seconds)
  stage: dev # setting the env stage to dev, this will be visible in the routes
  region: us-east-1
  environment: # add environment property
    NODE_ENV: ${self:custom.secrets.NODE_ENV} 

functions:
  create:
    handler: handler.create # point to exported create function in handler.js
    events:
      - http:
          path: listings # path will be domain.name.com/dev/listings
          method: post
          cors: true
  getOne:
    handler: handler.getOne
    events:
      - http:
          path: listings/{id} # path will be domain.name.com/dev/listings/1
          method: get
          cors: true
  getAll:
    handler: handler.getAll # path will be domain.name.com/dev/listings
    events:
      - http:
          path: listings
          method: get
          cors: true
  update:
    handler: handler.update # path will be domain.name.com/dev/listings/1
    events:
      - http:
          path: listings/{id}
          method: put
          cors: true
  delete:
    handler: handler.delete
    events:
      - http:
          path: listings/{id} # path will be domain.name.com/dev/listings/1
          method: delete
          cors: true

plugins:
  - serverless-offline # adding the plugin to be able to run the offline emulation
